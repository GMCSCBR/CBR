<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:beg="clr-namespace:BalaReva.Excel.Graph;assembly=BalaReva.Excel.Graph" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ufa="clr-namespace:UiPath.Form.Activities;assembly=UiPath.Form.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="EndData" Type="InArgument(x:String)" />
    <x:Property Name="ID" Type="InArgument(x:String)" />
    <x:Property Name="FirstData" Type="InArgument(x:String)" />
  </x:Members>
  <this:Main.EndData>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.EndData>
  <this:Main.ID>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.ID>
  <this:Main.FirstData>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.FirstData>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1248.66666666667,1852.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="72">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>BalaReva.Excel.Graph</x:String>
      <x:String>BalaReva.Excel.Graph.Interfaces</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Graph</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="528,1688" sap2010:WorkflowViewState.IdRef="Sequence_6">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="RequestString" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ufa:FormActivity Dismissed="{x:Null}" FormFieldsInputData="{x:Null}" FormTitle="{x:Null}" SelectedButton="{x:Null}" TimeoutInSeconds="{x:Null}" WindowPositionLeft="{x:Null}" WindowPositionTop="{x:Null}" DisableMaximizeButton="False" DisableMinimizeButton="False" DisplayName="страница с выбором валюты и периода" FormFieldsOutputData="[RequestString]" FormHeight="837" FormSchema="%[{&quot;tag&quot;:&quot;h1&quot;,&quot;refreshOnChange&quot;:true,&quot;content&quot;:&quot;Построение графика курса валюты&quot;,&quot;key&quot;:&quot;label&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Выберите валюту&quot;,&quot;widget&quot;:&quot;choicesjs&quot;,&quot;tableView&quot;:true,&quot;data&quot;:{&quot;values&quot;:[{&quot;label&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Австралийский доллар&quot;,&quot;value&quot;:&quot;R01010&quot;},{&quot;label&quot;:&quot;Австрийский шиллинг&quot;,&quot;value&quot;:&quot;R01015&quot;},{&quot;label&quot;:&quot;Азербайджанский манат&quot;,&quot;value&quot;:&quot;R01020A&quot;},{&quot;label&quot;:&quot;Фунт стерлингов Соединенного королевства&quot;,&quot;value&quot;:&quot;R01035&quot;},{&quot;label&quot;:&quot;Ангольская новая кванза&quot;,&quot;value&quot;:&quot;R01040F&quot;},{&quot;label&quot;:&quot;Армянский драм&quot;,&quot;value&quot;:&quot;R01060&quot;},{&quot;label&quot;:&quot;Белорусский рубль&quot;,&quot;value&quot;:&quot;R01090B&quot;},{&quot;label&quot;:&quot;Бельгийский франк&quot;,&quot;value&quot;:&quot;R01095&quot;},{&quot;label&quot;:&quot;Болгарский лев&quot;,&quot;value&quot;:&quot;R01100&quot;},{&quot;label&quot;:&quot;Бразильский реал&quot;,&quot;value&quot;:&quot;R01115&quot;},{&quot;label&quot;:&quot;Венгерский форинт&quot;,&quot;value&quot;:&quot;R01135&quot;},{&quot;label&quot;:&quot;Гонконгский доллар&quot;,&quot;value&quot;:&quot;R01200&quot;},{&quot;label&quot;:&quot;Греческая драхма&quot;,&quot;value&quot;:&quot;R01205&quot;},{&quot;label&quot;:&quot;Датская крона&quot;,&quot;value&quot;:&quot;R01215&quot;},{&quot;label&quot;:&quot;Доллар США&quot;,&quot;value&quot;:&quot;R01235&quot;},{&quot;label&quot;:&quot;Евро&quot;,&quot;value&quot;:&quot;R01239&quot;},{&quot;label&quot;:&quot;Индийская рупия&quot;,&quot;value&quot;:&quot;R01270&quot;},{&quot;label&quot;:&quot;Ирландский фунт&quot;,&quot;value&quot;:&quot;R01305&quot;},{&quot;label&quot;:&quot;Исландская крона&quot;,&quot;value&quot;:&quot;R01310&quot;},{&quot;label&quot;:&quot;Испанская песета&quot;,&quot;value&quot;:&quot;R01315&quot;},{&quot;label&quot;:&quot;Итальянская лира&quot;,&quot;value&quot;:&quot;R01325&quot;},{&quot;label&quot;:&quot;Казахстанский тенге&quot;,&quot;value&quot;:&quot;R01335&quot;},{&quot;label&quot;:&quot;Канадский доллар&quot;,&quot;value&quot;:&quot;R01350&quot;},{&quot;label&quot;:&quot;Киргизский сом&quot;,&quot;value&quot;:&quot;R01370&quot;},{&quot;label&quot;:&quot;Китайский юань&quot;,&quot;value&quot;:&quot;R01375&quot;},{&quot;label&quot;:&quot;Кувейтский динар&quot;,&quot;value&quot;:&quot;R01390&quot;},{&quot;label&quot;:&quot;Латвийский лат&quot;,&quot;value&quot;:&quot;R01405&quot;},{&quot;label&quot;:&quot;Ливанский фунт&quot;,&quot;value&quot;:&quot;R01420&quot;},{&quot;label&quot;:&quot;Литовский лит&quot;,&quot;value&quot;:&quot;R01435&quot;},{&quot;label&quot;:&quot;Литовский талон&quot;,&quot;value&quot;:&quot;R01436&quot;},{&quot;label&quot;:&quot;Молдавский лей&quot;,&quot;value&quot;:&quot;R01500&quot;},{&quot;label&quot;:&quot;Немецкая марка&quot;,&quot;value&quot;:&quot;R01510&quot;},{&quot;label&quot;:&quot;Немецкая марка&quot;,&quot;value&quot;:&quot;R01510A&quot;},{&quot;label&quot;:&quot;Нидерландский гульден&quot;,&quot;value&quot;:&quot;R01523&quot;},{&quot;label&quot;:&quot;Норвежская крона&quot;,&quot;value&quot;:&quot;R01535&quot;},{&quot;label&quot;:&quot;Польский злотый&quot;,&quot;value&quot;:&quot;R01565&quot;},{&quot;label&quot;:&quot;Португальский эскудо&quot;,&quot;value&quot;:&quot;R01570&quot;},{&quot;label&quot;:&quot;Румынский лей&quot;,&quot;value&quot;:&quot;R01585&quot;},{&quot;label&quot;:&quot;Румынский лей&quot;,&quot;value&quot;:&quot;R01585F&quot;},{&quot;label&quot;:&quot;СДР (специальные права заимствования)&quot;,&quot;value&quot;:&quot;R01589&quot;},{&quot;label&quot;:&quot;Сингапурский доллар&quot;,&quot;value&quot;:&quot;R01625&quot;},{&quot;label&quot;:&quot;Суринамский доллар&quot;,&quot;value&quot;:&quot;R01665A&quot;},{&quot;label&quot;:&quot;Таджикский сомони&quot;,&quot;value&quot;:&quot;R01670&quot;},{&quot;label&quot;:&quot;Таджикский рубл&quot;,&quot;value&quot;:&quot;R01670B&quot;},{&quot;label&quot;:&quot;Турецкая лира&quot;,&quot;value&quot;:&quot;R01700J&quot;},{&quot;label&quot;:&quot;Туркменский манат&quot;,&quot;value&quot;:&quot;R01710&quot;},{&quot;label&quot;:&quot;Новый туркменский манат&quot;,&quot;value&quot;:&quot;R01710A&quot;},{&quot;label&quot;:&quot;Узбекский сум&quot;,&quot;value&quot;:&quot;R01717&quot;},{&quot;label&quot;:&quot;Украинская гривна&quot;,&quot;value&quot;:&quot;R01720&quot;},{&quot;label&quot;:&quot;Украинский карбованец&quot;,&quot;value&quot;:&quot;R01720A&quot;},{&quot;label&quot;:&quot;Финляндская марка&quot;,&quot;value&quot;:&quot;R01740&quot;},{&quot;label&quot;:&quot;Французский франк&quot;,&quot;value&quot;:&quot;R01750&quot;},{&quot;label&quot;:&quot;Чешская крона&quot;,&quot;value&quot;:&quot;R01760&quot;},{&quot;label&quot;:&quot;Шведская крона&quot;,&quot;value&quot;:&quot;R01770&quot;},{&quot;label&quot;:&quot;Швейцарский франк&quot;,&quot;value&quot;:&quot;R01775&quot;},{&quot;label&quot;:&quot;ЭКЮ&quot;,&quot;value&quot;:&quot;R01790&quot;},{&quot;label&quot;:&quot;Эстонская крона&quot;,&quot;value&quot;:&quot;R01795&quot;},{&quot;label&quot;:&quot;Югославский новый динар&quot;,&quot;value&quot;:&quot;R01805&quot;},{&quot;label&quot;:&quot;Южноафриканский рэнд&quot;,&quot;value&quot;:&quot;R01810&quot;},{&quot;label&quot;:&quot;Вон Республики Корея&quot;,&quot;value&quot;:&quot;R01815&quot;},{&quot;label&quot;:&quot;Японская иена&quot;,&quot;value&quot;:&quot;R01820&quot;}]},&quot;key&quot;:&quot;list&quot;,&quot;type&quot;:&quot;select&quot;,&quot;indexeddb&quot;:{&quot;filter&quot;:{}},&quot;input&quot;:true,&quot;calculateServer&quot;:false,&quot;uniqueOptions&quot;:false},{&quot;label&quot;:&quot;Начало диапазона&quot;,&quot;hideInputLabels&quot;:false,&quot;inputsLabelPosition&quot;:&quot;top&quot;,&quot;tableView&quot;:false,&quot;fields&quot;:{&quot;day&quot;:{&quot;hide&quot;:false},&quot;month&quot;:{&quot;hide&quot;:false},&quot;year&quot;:{&quot;hide&quot;:false,&quot;minYear&quot;:1993}},&quot;key&quot;:&quot;day&quot;,&quot;type&quot;:&quot;day&quot;,&quot;input&quot;:true,&quot;minYear&quot;:1993,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Конец диапазона&quot;,&quot;hideInputLabels&quot;:false,&quot;inputsLabelPosition&quot;:&quot;top&quot;,&quot;tableView&quot;:false,&quot;fields&quot;:{&quot;day&quot;:{&quot;hide&quot;:false},&quot;month&quot;:{&quot;hide&quot;:false},&quot;year&quot;:{&quot;hide&quot;:false,&quot;minYear&quot;:1993}},&quot;key&quot;:&quot;end&quot;,&quot;type&quot;:&quot;day&quot;,&quot;input&quot;:true,&quot;minYear&quot;:1993,&quot;calculateServer&quot;:false},{&quot;label&quot;:&quot;Построить&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;submit&quot;,&quot;conditional&quot;:{&quot;show&quot;:false,&quot;when&quot;:&quot;list&quot;},&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;calculateServer&quot;:false}]" FormTheme="{}{&quot;Activities&quot;:[&quot;FORMS&quot;],&quot;Id&quot;:&quot;1609316458906&quot;,&quot;Name&quot;:&quot;CBRF&quot;,&quot;BaseCss&quot;:&quot;../../assets/css/themes/journal.bootstrap.min.css&quot;,&quot;ImageSrc&quot;:&quot;../../assets/themeicons/journal.png&quot;,&quot;OverrideCssUrl&quot;:&quot;&quot;,&quot;UserStyleOverrides&quot;:&quot;body , h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {\n                      font-family : Georgia !important;\n                    }table, .btn, .form-control {\n                      font-size : 15px !important;\n                     }h1 {\n                      font-size : 37px !important;\n                    }h2 {\n                      font-size : 31px !important;\n                    }h3 {\n                      font-size : 25px !important;\n                    }h4 {\n                      font-size : 19px !important;\n                    }h5 {\n                      font-size : 15px !important;\n                    }h6 {\n                      font-size : 13px !important;\n                    }body {\n      background:  #f7f1fa !important;\n      font-size : 15px !important;\n      font-family : Georgia !important;\n      color : #5d5d5e !important\n    } .panel-default {\n                        background:   !important;\n                        border-color :   !important;\n                      }\n                 .panel-default &gt; .panel-heading {\n                        background-color:  !important;\n                        color : #5d5d5e !important\n                      }.btn-primary {\n                          background:  #cc59fd !important;\n                          border-color:  #be33fa !important;\n                          color:  #ffffff !important;\n                      } .btn-primary:hover {\n                          background:  #cc59fd !important;\n                          color:  #ffffff !important;\n                      } .btn-default {\n                        background:   !important;\n                        border-color:   !important;\n                        color:   !important;\n                      } .btn-default:hover {\n                        background:   !important;\n                        color:   !important;\n                      } &quot;,&quot;Properties&quot;:&quot;&quot;,&quot;IsCustomTheme&quot;:true,&quot;Version&quot;:1,&quot;ThemeVersion&quot;:1}" FormWidth="1086" GenerateInputFields="True" sap:VirtualizedContainerService.HintSize="486,740" sap2010:WorkflowViewState.IdRef="FormActivity_1" IsReadOnly="False" MaxColumnsForSchemaGeneration="6" RunDoBlockFirst="False" RunInIsolatedMode="False">
      <ufa:FormActivity.Body>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416.666666666667,614" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <Sequence.Variables>
              <Variable x:TypeArguments="njl:JObject" Name="listJson" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Парсинг JSON" sap:VirtualizedContainerService.HintSize="374.666666666667,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[listJson]" JsonString="[RequestString]" />
            <Assign DisplayName="Получение ID" sap:VirtualizedContainerService.HintSize="374.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ID]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[listJson.Item("list").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Получение 1 даты" sap:VirtualizedContainerService.HintSize="374.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[FirstData]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[CDate(listJson.Item("day")).ToString("dd.MM.yyyy").Replace(".","/")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Получение 2 даты" sap:VirtualizedContainerService.HintSize="374.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[EndData]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[CDate(listJson.Item("end")).ToString("dd.MM.yyyy").Replace(".","/")]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke API REQUEST(test) workflow" sap:VirtualizedContainerService.HintSize="374.666666666667,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="API REQUEST(test).xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_FirstData">[FirstData]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_EndData">[EndData]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_ID">[ID]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </ActivityAction>
      </ufa:FormActivity.Body>
      <ufa:FormActivity.DelayBody>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
          <Delay Duration="00:00:00.2500000" sap2010:WorkflowViewState.IdRef="Delay_1" />
        </ActivityAction>
      </ufa:FormActivity.DelayBody>
      <ufa:FormActivity.FormFieldsCollection>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ufa:FormActivity.FormFieldsCollection>
    </ufa:FormActivity>
    <Sequence DisplayName="Формирование графика" sap:VirtualizedContainerService.HintSize="486,565.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_8">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="DataValuta" />
        <Variable x:TypeArguments="x:Int32" Name="count" />
        <Variable x:TypeArguments="x:String" Name="cellRange" />
        <Variable x:TypeArguments="x:String" Name="str" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Считывание таблицы" sap:VirtualizedContainerService.HintSize="444,259.333333333333" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="RC_F04_01_2021_T15_01_2021.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Сделать" sap:VirtualizedContainerService.HintSize="376,150.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[DataValuta]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="RC">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
              </ui:ExcelReadRange>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
      </ui:ExcelApplicationScope>
      <Assign DisplayName="количество строк в таблице" sap:VirtualizedContainerService.HintSize="444,62" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[DataValuta.Rows.Count]</InArgument>
        </Assign.Value>
      </Assign>
      <beg:ExcelCharts ChartTitle="{x:Null}" FilePassword="{x:Null}" ImageCopy="{x:Null}" ModifyPassword="{x:Null}" CellRange="[&quot;B2:C&quot;+(count+1).ToString]" ChartType="LineStacked" DisplayName="Построение графика" FilePath="C:\Users\ekarshakova\Documents\UiPath\GraphTest\RC_F04_01_2021_T15_01_2021.xlsx" sap:VirtualizedContainerService.HintSize="444,72" sap2010:WorkflowViewState.IdRef="ExcelCharts_2" SheetName="RC">
        <beg:ExcelCharts.Options>
          <beg:ShowOptions AutoText="True" DataLabelsType="ShowPercent" HasLeaderLines="False" LegendKey="ShowLabel" Separator="" ShowBubbleSize="False" ShowCategoryName="False" ShowLegend="False" ShowPercentage="False" ShowSeriesName="False" ShowValue="False" />
        </beg:ExcelCharts.Options>
        <beg:ExcelCharts.Size>
          <beg:ChartSize Height="250" Left="50" Top="50" Width="250" />
        </beg:ExcelCharts.Size>
      </beg:ExcelCharts>
    </Sequence>
    <ufa:FormActivity Dismissed="{x:Null}" FormFieldsOutputData="{x:Null}" FormTitle="{x:Null}" SelectedButton="{x:Null}" TimeoutInSeconds="{x:Null}" WindowPositionLeft="{x:Null}" WindowPositionTop="{x:Null}" DisableMaximizeButton="False" DisableMinimizeButton="False" DisplayName="Create Form" FormFieldsInputData="[RequestString]" FormHeight="400" FormSchema="%[{&quot;label&quot;:&quot;HTML&quot;,&quot;attrs&quot;:[{&quot;attr&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;content&quot;:&quot;&lt;img src=\&quot;C:\\Users\\ekarshakova\\Documents\\UiPath\\CentralBankRF\\images\\graph.png\&quot; alt=\&quot;график\&quot;&gt;&quot;,&quot;refreshOnChange&quot;:false,&quot;key&quot;:&quot;html&quot;,&quot;type&quot;:&quot;htmlelement&quot;,&quot;calculateServer&quot;:false,&quot;input&quot;:false,&quot;tableView&quot;:false}]" FormTheme="{}{&quot;Activities&quot;:[&quot;FORMS&quot;],&quot;Id&quot;:&quot;100120&quot;,&quot;Name&quot;:&quot;Default&quot;,&quot;BaseCss&quot;:&quot;../../assets/css/themes/uipath.bootstrap.min.css&quot;,&quot;ImageSrc&quot;:&quot;../../assets/themeicons/uipath.png&quot;,&quot;OverrideCssUrl&quot;:&quot;../../assets/css/themes/uipath.custom.css&quot;,&quot;UserStyleOverrides&quot;:&quot;&quot;,&quot;Properties&quot;:&quot;&quot;,&quot;IsCustomTheme&quot;:false,&quot;Version&quot;:1,&quot;ThemeVersion&quot;:1}" FormWidth="800" GenerateInputFields="True" sap:VirtualizedContainerService.HintSize="486,210.666666666667" sap2010:WorkflowViewState.IdRef="FormActivity_3" IsReadOnly="False" MaxColumnsForSchemaGeneration="6" RunDoBlockFirst="False" RunInIsolatedMode="False">
      <ufa:FormActivity.Body>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="207.333333333333,84.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </ActivityAction>
      </ufa:FormActivity.Body>
      <ufa:FormActivity.DelayBody>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
          <Delay Duration="00:00:00.2500000" sap2010:WorkflowViewState.IdRef="Delay_6" />
        </ActivityAction>
      </ufa:FormActivity.DelayBody>
      <ufa:FormActivity.FormFieldsCollection>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ufa:FormActivity.FormFieldsCollection>
    </ufa:FormActivity>
  </Sequence>
</Activity>